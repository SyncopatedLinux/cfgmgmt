---

- name: setup repositories and install packages
  hosts: all
  tags: ['base']
  become: True
  gather_subset:
    - hardware
    - network
  vars:
    journal_level: notice
    shell_login: True

  vars_files:
    - "vars/user.yml"

  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/bin"
    PKG_CONFIG_PATH: "/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig"
    ZSH: "/usr/local/share/oh-my-zsh"
    DISPLAY: ":0"

  pre_tasks:

    - name: set perms on /tmp/ansible.log
      file:
        path: /tmp/ansible.log
        mode: '0777'
      ignore_errors: True

    - name: symlink os-release
      file:
        src: /etc/os-release
        dest: /etc/system-release
        state: link

    - block:
        - name: print output
          debug:
            msg: "{{ keyserver }}"

        - name: check if keys are present
          stat:
            path: "{{ user.home }}/.ssh/id_rsa"
          register: keys

        - name: copy keys from remote host
          delegate_to: 127.0.0.1
          run_once: True
          become_user: "{{ user.name }}"
          shell: "scp {{ user.name }}@{{ keyserver }}:~/.ssh/{{ item }} {{ user.home }}/.ssh/{{ item }}"
          args:
            chdir: "{{ user.home }}"
          with_items:
            - id_rsa
            - id_rsa.pub
          when:
            - not keys.stat.exists
            - keyserver is defined
          tags: ['keys']

        - name: enable ssh daemon
          service:
            name: sshd
            enabled: True

      ignore_errors: "{{ ansible_check_mode }}"
      tags: ['ssh']

    - import_tasks: tasks/zshell.yml
      tags: ['shell']

    - import_tasks: tasks/logging.yml
      tags: ['logging']

    - import_tasks: tasks/user.yml
      tags: ['user']

    - import_tasks: tasks/sudoers.yml
      tags: ['sudoers']

    - name: copy ld config file
      copy:
        src: etc/ld.so.conf
        dest: /etc/ld.so.conf
        mode: '0644'
        backup: yes

    - name: run ldconfig
      shell: /sbin/ldconfig

    - name: Print all available facts
      ansible.builtin.debug:
        var: ansible_facts
      tags: ['facts']

  tasks:

    - include_tasks: "tasks/distro/{{ ansible_distribution }}/main.yml"
      tags: ['repo', 'packages']

  roles:

    - role: network
      tags: ['netork', 'firewall', 'autofs']
    - role: audio
      tags: ['audio', 'alsa', 'jack', 'pulsesudio']

  post_tasks:

    - import_tasks: tasks/firewall.yml
      tags: ['firewall']

    - import_tasks: tasks/filesystem.yml
      tags: ['filesystem']

    - import_tasks: tasks/utils.yml
      tags: ['utils']

    - import_tasks: tasks/updatedb.yml
      tags: ['updatedb']

    - import_tasks: tasks/autologin.yml
      tags: ['autologin']

    - import_tasks: tasks/grub.yml
      tags: ['grub']

    # Reset is not implemented local connection
    - name: reboot host
      ansible.builtin.reboot:
      async: 1
      poll: 0
      ignore_errors: True
      when: reboot is defined

    - name: wait for host to reboot
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 120
      when: reboot is defined



### Notes:
###  `check_mode:` False means that the tasks will run even if using check mode
###  setting `check_mode: True` will cause the task to fail if running in check mode and regular mode.
###  ignore_errors: "{{ check_mode }}" wil ignore errors while running in check mode
###  the command module does not run given commands in check mode
