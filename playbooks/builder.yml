---

- name: setup build host
  hosts: soundbot
  become: True
  gather_subset:
    - hardware
    - network
  vars:
    path:
      - "{{ lookup('env','HOME') }}/.local/bin"
      - "{{ lookup('env','HOME') }}/.cargo/bin"
  vars_files:
    - "vars/user.yml"

  pre_tasks:

    - block:
        - name: check -march support
          shell: /lib/ld-linux-x86-64.so.2 --help | grep supported|xargs|awk '{print $1}'
          register: supported_march

        - name: check output from grep command
          debug:
            msg: "{{ supported_march }}"

        - name: set architecture
          set_fact:
            architecture: "x86-64-v3"
          when: supported_march.stdout_lines[0] == 'x86-64-v3'

        - name: set architecture
          set_fact:
            architecture: "x86-64"
          when: supported_march.stdout_lines[0] == 'x86-64-v2'

      ignore_errors: "{{ ansible_check_mode }}"
      tags: ['flags']

    - name: ensure aur_builder user to build packages
      user:
        name: aur_builder
        create_home: yes
        shell: /usr/bin/zsh

    - name: ensure permissions for aur_builder in sudoers
      copy:
        content: |
          aur_builder ALL=(ALL) NOPASSWD:SETENV: /usr/bin/pacman,/usr/bin/mkdir,/usr/bin/rm,/usr/bin/mkarchroot,/usr/bin/makechrootpkg,/usr/bin/arch-nspawn,/usr/bin/mount,/usr/bin/umount,/usr/bin/micro
        dest: /etc/sudoers.d/11-aur_builder
        validate: 'visudo -cf %s'

    - name: ensure group writeable for aur_builder home
      file:
        path: /home/aur_builder
        state: directory
        owner: aur_builder
        group: wheel
        mode: '2775'

    - name: add user to aur_builder group
      user:
        name: "{{ user.name }}"
        groups: aur_builder
        append: yes

  tasks:
    - import_role:
        name: repo
