---

- hosts: all
  tags: ['base', 'packages']
  become: True
  gather_subset:
    - hardware
    - network
  vars:
    path:
      - "{{ lookup('env','HOME') }}/.local/bin"
      - "{{ lookup('env','HOME') }}/.cargo/bin"

  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}"
    PKG_CONFIG_PATH: "/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig"
    ZSH: "/usr/local/share/oh-my-zsh"
    DISPLAY: ":0"

  pre_tasks:

    - name: Include distro vars
      include_vars:
        file: vars/distro/{{ ansible_distribution }}.yml

    - name: Include user vars
      include_vars:
        dir: vars
        depth: 1
      tags: ['ssh', 'repo', 'packages', 'sudoers', 'ruby']

    - name: Set ansible_home
      set_fact:
        ansible_home: "{{ lookup('env','HOME') }}/Workspace/ohmannium"

    - name: Set admin_group variable
      set_fact:
        admin_group: "{{ admin_group }}"

    - block:
        - name: Print keyserver hostname
          debug:
            msg: "{{ keyserver }}"
          when: ( debugging is defined or keyserver is defined )

        - name: Check if keys are present
          stat:
            path: "{{ user.home }}/.ssh/id_rsa"
          register: keys

        - name: Copy keys from remote host
          delegate_to: 127.0.0.1
          run_once: True
          become_user: "{{ user.name }}"
          shell: "scp {{ user.name }}@{{ keyserver }}:~/.ssh/{{ item }} {{ user.home }}/.ssh/{{ item }}"
          args:
            chdir: "{{ user.home }}"
          with_items:
            - id_rsa
            - id_rsa.pub
          when:
            - not keys.stat.exists
            - keyserver is defined
          tags: ['keys']

        - name: Enable ssh daemon
          service:
            name: sshd
            enabled: True

      ignore_errors: "{{ ansible_check_mode }}"
      tags: ['ssh']

    - block:
        - name: Check -march support
          shell: /lib/ld-linux-x86-64.so.2 --help | grep supported|xargs|awk '{print $1}'
          register: supported_march

        - name: Check output from grep command
          debug:
            msg: "{{ supported_march }}"

        - name: Set architecture
          set_fact:
            architecture: "x86-64-v3"
          when: supported_march.stdout_lines[0] == 'x86-64-v3'

        - name: Set architecture
          set_fact:
            architecture: "x86-64"
          when: supported_march.stdout_lines[0] == 'x86-64-v2'

      check_mode: False
      tags: ['repo', 'packages']

  tasks:

    - import_tasks: tasks/user.yml
      tags: ['user']

    - import_tasks: tasks/sudoers.yml
      tags: ['sudoers']

    - import_tasks: tasks/ruby.yml
      tags: ['ruby']

    - debug:
        msg: "test"

- name: include archlinux playbook
  import_playbook: Archlinux.yml

- name: include base playbook
  import_playbook: base.yml

- name: include ui playbook
  import_playbook: ui.yml
