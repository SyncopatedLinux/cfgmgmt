---

#TODO: set defaults to "auto" and "native"

- block:
    - name: Check -march support
      ansible.builtin.shell: /lib/ld-linux-x86-64.so.2 --help | grep supported|xargs|awk '{print $1}'
      register: supported_march

    - name: Check output from grep command
      ansible.builtin.debug:
        msg: "{{ supported_march }}"

    - name: Set architecture
      ansible.builtin.set_fact:
        architecture: "x86-64-v3"
      when: supported_march.stdout_lines[0] == 'x86-64-v3'

    - name: Set architecture
      ansible.builtin.set_fact:
        architecture: "x86-64"
      when: supported_march.stdout_lines[0] == 'x86-64-v2'

  check_mode: False
  # when: ansible_system_vendor != "QEMU"
  tags: ['base', 'repo', 'packages']

- name: Add syncopated repo key
  ansible.builtin.shell: |
    if [[ -z "$(pacman-key --list-keys | grep syncopated 2>/dev/null)" ]];
    then
      echo "key already installed"
    else
      curl http://syncopated.hopto.org/syncopated.gpg | pacman-key --add -
      pacman-key --lsign-key 36A6ECD355DB42B296C0CEE2157CA2FC56ECC96A
    fi
  register: syncopated_keys
  until: "syncopated_keys is not failed"
  retries: 10
  delay: 10
  check_mode: False
  tags: ['repo']

- name: Add archaudio repo key
  ansible.builtin.shell: |
    if [[ -z "$(pacman-key --list-keys | grep OSAMC 2>/dev/null)" ]];
    then
      echo "key already installed"
    else
      curl https://arch.osamc.de/proaudio/osamc.gpg | pacman-key --add -
      pacman-key --lsign-key 762AE5DB2B38786364BD81C4B9141BCC62D38EE5
    fi
  register: archaudio_keys
  until: "archaudio_keys is not failed"
  retries: 10
  delay: 10
  check_mode: False
  tags: ['repo']

- name: Adjust pacman, paru and makepkg configs
  ansible.builtin.template:
    src: "etc/{{ item }}.j2"
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: '0644'
    backup: yes
  with_items:
    - makepkg.conf
    - pacman.conf
    - paru.conf
  tags: ['makepkg', 'pacman', 'paru', 'packages', 'repo']
  ignore_errors: "{{ ansible_check_mode }}"

- name: Update cache
  community.general.pacman:
    update_cache: True
    upgrade: False
  tags: ['packages']

- name: Check if paru installed
  ansible.builtin.stat:
    path: /usr/bin/paru
  register: paru
  tags: ['paru', 'packages']

- name: Install paru if not installed
  block:
    - name: Install paru
      community.general.pacman:
        name: paru-bin
        state: present
        force: yes
        extra_args: --noconfirm
      register: paru_package
      until: "paru_package is not failed"
      retries: 2
      delay: 10

  rescue:
    - name: Clone paru
      git:
        repo: "https://aur.archlinux.org/paru.git"
        dest: "/tmp/paru"
        accept_hostkey: yes
        update: yes
        force: no
      become: False

    - name: Make and install paru
      shell: "makepkg -si --noconfirm --needed"
      args:
        chdir: "/tmp/paru"
      become: False

    - name: clean and update package cache
      shell: "paru -Sc --noconfirm && paru -Syy"
      become: False

  when: not paru.stat.exists
  tags: ['paru', 'packages']

- name: Check if mirrors have been updated within the past 24h
  ansible.builtin.shell: "fd --changed-within 24hours --search-path=/etc/pacman.d"
  register: mirror_status
  tags: ['mirrors', 'packages']

- name: Print mirror file status
  ansible.builtin.debug:
    msg: "{{ mirror_status }}"
  when:
    - ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )
    - debugging is defined
  tags: ['mirrors', 'packages']

- name: Update mirrors
  ansible.builtin.shell: |
    reflector --download-timeout 3 --protocol https \
    --latest 20 --sort rate --score 10 --fastest 8 \
    --save /etc/pacman.d/mirrorlist
  when: ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )
  register: mirror_update
  tags: ['mirrors', 'packages']

- name: Update cache
  community.general.pacman:
    update_cache: True
    upgrade: False
  when: mirror_update.changed
  tags: ['packages']

- name: Remove pipewire
  community.general.pacman:
    name: "pipewire-alsa,pipewire-audio,pipewire-jack,pipewire-pulse,wireplumber"
    state: absent
    force: yes
    extra_args: --noconfirm
  when: use_jack|default(true)|bool == true
  ignore_errors: True
  tags: ['packages']

- block:

    - name: Include package vars
      ansible.builtin.include_vars:
        file: packages/{{ ansible_distribution }}/packages.yml

    - name: install packages
      aur:
        use: paru
        name: "{{ packages }}"
        state: present

  # rescue:
  #   # usually this fails because of: jack2 and jack are in conflict. Remove jack? [y/N]
  #   - name: Remove jack and nitrogen
  #     ansible.builtin.shell:
  #       paru -Rdd {{ item }} --noconfirm
  #     with_items:
  #       - jack
  #       - nitrogen
  #     tags: ['packages']

  #   - name: Install packages
  #     action: ohmannium packages="{{ packages | to_json }}"
  #     register: action_output

  become: False
  tags: ['packages']
