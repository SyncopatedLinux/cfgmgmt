---

- block:
    - name: Create getty@tty1.service.d directory
      ansible.builtin.file:
        path: "/etc/systemd/system/getty@tty1.service.d"
        state: directory
        owner: root
        group: root

    - name: Create systemd drop-in file for virtual console autologin
      ansible.builtin.template:
        src: "etc/systemd/system/getty@tty1.service.d/autologin.conf.j2"
        dest: "/etc/systemd/system/getty@tty1.service.d/autologin.conf"
        owner: root
        group: root
        mode: '0644'
        backup: yes

  when: login.shell|bool

- block:
    - name: Install lightdm
      aur:
        use: auto
        name: lightdm
        state: present
      become_user: "{{ user.name }}"

    - name: Ensure group autologin exists
      ansible.builtin.group:
        name: autologin
        state: present
        system: yes

    - name: Add user to autologin group
      ansible.builtin.user:
        name: "{{ user.name }}"
        groups: autologin
        append: yes

    - name: Install xsession file to /etc/lightdm/xsession
      ansible.builtin.copy:
        src: etc/lightdm/Xsession
        dest: /etc/lightdm/Xsession
        directory_mode: yes
        owner: root
        group: root
        mode: '0755'

    - name: Update lightdm.conf
      ansible.builtin.template:
        src: etc/lightdm/lightdm.conf.j2
        dest: /etc/lightdm/lightdm.conf
        mode: '644'
        owner: root
        group: root
        backup: yes

    - name: Update pam
      ansible.builtin.copy:
        src: "etc/pam.d/{{ item }}"
        dest: "/etc/pam.d/{{ item }}"
        mode: '0644'
        backup: yes
      with_items:
        - lightdm-autologin
        - login
        - passwd
      tags: ['pam']

  notify: "enable and restart lightdm service"
  when: login.lightdm|bool"
  tags: ['lightdm']

# if this file does not exist, lightdm will fail to start
- name: Set dmrc to i3
  ansible.builtin.copy:
    content: |
      [Desktop]
      Session=i3
    dest: "{{ user.home }}/.dmrc"
    owner: "{{ user.name }}"
    mode: '0644'

# on base arch install:
# stderr: 'Error org.freedesktop.DBus.Error.ServiceUnknown: The name org.freedesktop.Accounts was not provided by any .service files'

# - name: set i3 as the default xsession
#   shell: |
#     dbus-send --system --type=method_call --print-reply --dest=org.freedesktop.Accounts /org/freedesktop/Accounts/User1000 org.freedesktop.Accounts.User.SetXSession string:i3
#   tags: ['xsession']
