---

- ansible.builtin.include_tasks:
    file: tasks/ssl.yml
  when: use_ssl is defined
  tags: ['ssl']

- name: copy rsyslog config for nginx
  ansible.builtin.copy:
    dest: /etc/rsyslog.d/90-nginx_rsyslog.conf
    group: root
    mode: '0644'
    owner: root
    src: 90-nginx_rsyslog.conf
    src=90-nginx_rsyslog.conf
    dest=/etc/rsyslog.d/90-nginx_rsyslog.conf
    owner=root
    group=root
    mode=0644
  notify: restart rsyslog
  tags: [configuration,nginx]

- ansible.builtin.include_tasks:
    file: nginx-official-repo.yml
  when: nginx_official_repo == True

- ansible.builtin.include_tasks:
    file: passenger-phusion-repo.yml
  when: nginx_passenger == True

- ansible.builtin.include_tasks:
    file: installation.packages.yml
  when: nginx_installation_type == "packages"

- ansible.builtin.include_tasks:
    file: installation.source.yml
  when: nginx_installation_type == "source"
  tags: ['nginx_source']

- ansible.builtin.include_tasks:
    file: ensure-dirs.yml

- ansible.builtin.include_tasks:
    file: remove-defaults.yml
  when: not keep_only_specified

- ansible.builtin.include_tasks:
    file: remove-extras.yml
  when: keep_only_specified

- ansible.builtin.include_tasks:
    file: remove-unwanted.yml

- ansible.builtin.include_tasks:
    file: configuration.yml

- name: sync fancyindex theme
  ansible.posix.synchronize:
    src: usr/share/nginx/html/fancyindex/Nginx-Fancyindex-Theme-dark
    dest: "{{ webroot }}/"
    recursive: yes
    mode: push
    delete: no
    checksum: yes
    perms: no
    rsync_opts:
      - "--update"
      - "--omit-dir-times"
  when: use_fancy_index is defined
  notify: reload nginx - without service
  tags: ['fancyindex']

- name: create blank index.html for default traffic
  ansible.builtin.copy:
    src: index.html
    dest: "{{ webroot }}/index.html"
    backup: yes
    owner: root
    group: root
    mode: '0644'
  when: nginx_create_blank_index|bool

- ansible.builtin._include: selinux.yml
  when: ansible_selinux.status == 'enabled'
  tags: ['selinux']

- name: Start the nginx service
  ansible.builtin.service: name={{ nginx_service_name }} state=started enabled=yes
  when: nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == "on"
  tags: [service,nginx]
