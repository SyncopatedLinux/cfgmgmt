---

- name: set admin_group variable
  set_fact:
    admin_group: "{{ admin_group }}"

- name: add user to groups defined in playbook
  user:
    name: "{{ user.name }}"
    groups: "{{ item }}"
    append: yes
  with_items:
    - audio
    - input
    - video
    - "{{ admin_group }}"

# to allow for ansible pipelining functionality
# https://docs.ansible.com/ansible/2.4/intro_configuration.html#pipelining
# while this requirement was removed in RHEL, many other distros leave this option enabled
- name: disable requiretty for user so automation can run without interruption
  lineinfile:
    dest: /etc/sudoers
    regexp: "^Defaults    requiretty"
    line: "Defaults:{{ user.name }}    !requiretty"
    backrefs: yes
    backup: yes
    validate: 'visudo -cf %s'

- name: ensure /etc/sudoers.d exists
  file:
    path: /etc/sudoers.d
    state: directory

- name: set NOPASSWD for user in sudoers
  lineinfile:
    path: /etc/sudoers.d/020_nopasswd
    line: '{{ user.name }} ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'
    create: yes
    backup: yes

- name: set NOPASSWD for user in polkit
  template:
    src: etc/polkit-1/rules.d/49-nopasswd_global.rules.j2
    dest: /etc/polkit-1/rules.d/49-nopasswd_global.rules
    mode: '644'
    backup: no

- name: remove existing sudoers if there is one
  file:
    path: /etc/sudoers.d/10-installer
    state: absent
  ignore_errors: True
