---

- name: Check repository version
  ansible.builtin.shell: "paru -Si code | grep -w 'extra/code' | awk '{print $2}' | sed 's/-1$//' | xargs"
  register: desired_version
  changed_when: false

- name: Get installed application version
  ansible.builtin.shell: "code --version | head -1 |awk '{print $1}'"
  register: current_version
  changed_when: false

- block:
    - name: install vscode
      aur:
        use: auto
        name: code
        state: present

    - name: Install VSCode extensions
      ansible.builtin.command: code --install-extension {{ item }}
      loop:
        - Artymaury.template-finder
        - castwide.solargraph
        - KoichiSasada.vscode-rdbg
        - kortina.vscode-markdown-notes
        - manassahu.openai-developer
        - MattiasBaake.vscode-snippets-for-ansible
        - misogi.ruby-rubocop
        - ms-azuretools.vscode-docker
        - ms-python.python
        - ms-python.vscode-pylance
        - rebornix.ruby
        - redhat.ansible
        - redhat.vscode-yaml
        - Shopify.ruby-extensions-pack
        - Shopify.ruby-lsp
        - Shopify.vscode-shadowenv
        - sorbet.sorbet-vscode-extension
        - tomoki1207.pdf
        - wingrunr21.vscode-ruby
        - xlab-steampunk.steampunk-spotter
        - yzane.markdown-pdf
  rescue:
    - name: Handle installation failure
      ansible.builtin.debug:
        msg: "Failed to install VSCode extension: {{ item }}"
      loop: "{{ ansible_failed_result | map(attribute='item') | list }}"
  always:
    - name: Continue execution
      ansible.builtin.debug:
        msg: "Continuing with playbook execution"

  when: current_version.stdout == desired_version.stdout
