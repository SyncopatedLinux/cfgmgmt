---

- name: Ensure user belongs to audio group
  ansible.builtin.user:
    name: "{{ user.name }}"
    groups: "audio"
    append: yes

- name: Set rtprio, memlock and nice for audio group
  ansible.builtin.copy:
    content: |
      @audio  - rtprio  98
      @audio  - memlock unlimited
      @audio  - nice    -20
    dest: "/etc/security/limits.d/41-realtime.conf"
    mode: '0644'

# It is safe to have this file even if
# your hardware contains neither device
# source: https://gentoostudio.org/?page_id=420
- name: Set timer permissions in udev rules
  ansible.builtin.copy:
    content: |
      KERNEL=="rtc0", GROUP="audio"
      KERNEL=="hpet", GROUP="audio"
    dest: "/etc/udev/rules.d/40-timer-permissions.rules"
    mode: '0644'

- name: Set sysctl params
  ansible.builtin.copy:
    src: etc/sysctl.d/99-cachyos-settings.conf
    dest: /etc/sysctl.d/99-cachyos-settings.conf
    mode: '0644'
  tags: ['sysctl']

- block:
    - name: Enable tuned service
      ansible.builtin.systemd:
        name: tuned
        enabled: no
      ignore_errors: "{{ ansible_check_mode }}"

    # - name: Set tuned profile to laptop-battery-powersave
    #   shell: |
    #     tuned-adm profile laptop-battery-powersave
    #   register: tuned_profile
    #   changed_when: tuned_profile.rc != 0

    - name: Install realtime-modified profile
      ansible.builtin.copy:
        src: etc/tuned/realtime-modified/tuned.conf
        dest: /etc/tuned/realtime-modified/tuned.conf
        owner: root
        group: root
        mode: '0644'

  tags: ['tuned']


- block:
    - name: Install rtirq defaults
      ansible.builtin.copy:
        src: etc/sysconfig/rtirq
        dest: /etc/rtirq.conf
        directory_mode: no
        owner: root
        group: root
        mode: '0644'
      register: rtirq_config

    # rtkit package should be Installed before this happens
    - name: Install rtkit.conf
      ansible.builtin.copy:
        src: etc/rtkit.conf
        dest: /etc/rtkit.conf
        directory_mode: no
        owner: root
        group: root
        mode: '0644'
      register: rtkit_conf

    - name: Install rtkit systemd file
      ansible.builtin.template:
        src: usr/lib/systemd/system/rtkit-daemon.service.j2
        dest: /usr/lib/systemd/system/rtkit-daemon.service
        mode: '0644'
      register: rtkit_systemd

  tags: ['rtirq', 'rtkit']
  notify:
    - "enable rtirq service"
    - "enable rtkit service"

- name: Install cpucpower defaults
  ansible.builtin.template:
    src: etc/default/cpupower.j2
    dest: /etc/default/cpupower
    mode: '0644'
    backup: yes
  tags: ['cpupower']

- name: Enable cpupower service
  ansible.builtin.service:
    name: cpupower
    enabled: True
  ignore_errors: "{{ ansible_check_mode }}"
  when: ansible_system_vendor != "QEMU"
  tags: ['cpupower']

# Do not use the irqbalance daemon, or do so carefully [4].
# https://wiki.archlinux.org/title/Professional_audio#Tips_and_tricks
- name: Disable irqbalance service
  ansible.builtin.service:
    name: irqbalance
    enabled: False
  ignore_errors: True

- name: Disable ananicy-cpp and bpftune
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: False
  ignore_errors: True
  loop:
    - ananicy-cpp
    - bpftune
